name: Build Docker Image
on:
  push:
  schedule:
    - cron: '0 0 1 * *'
jobs:
  build:
    if: "!(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]'))"
    strategy:
      matrix:
        scheme: [texlive, texlive-full]
    name: Build TeXLive [${{ matrix.scheme }}]
    runs-on: ubuntu-latest
    env:
      SCHEME: ${{ matrix.scheme }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Enable Docker experimental features
        run: |
          jq '.experimental=true' /etc/docker/daemon.json > daemon.json
          sudo mv daemon.json /etc/docker/daemon.json
          sudo systemctl restart docker
          docker version -f '{{.Server.Experimental}}'
      - name: Build
        run: |
          docker build --squash -t $SCHEME --build-arg scheme=$SCHEME .
      - name: Test
        run: |
          docker run --rm $SCHEME pdflatex --version
      - name: Deploy
        run: |
          DOCKER_TAG="adrianosokax/$SCHEME"
          GH_TAG="docker.pkg.github.com/adriansosauv/altex/$SCHEME"
          VERSION="$(date "+%Y%m%d")"
          docker tag $SCHEME ${DOCKER_TAG}:$VERSION
          docker tag $SCHEME ${DOCKER_TAG}:latest
          docker tag $SCHEME ${GH_TAG}:$VERSION
          docker tag $SCHEME ${GH_TAG}:latest
          docker images $DOCKER_TAG
          echo "$DOCKER_HUB_TOKEN" | docker login -u adrianosokax -p ${{ secrets.AlTex }}
          echo "$GITHUB_TOKEN" | docker login --password-stdin -u AdrianSosaUV docker.pkg.github.com
          docker push $DOCKER_TAG
          docker push $GH_TAG
        env:
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'